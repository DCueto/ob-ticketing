name: Vercel Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

jobs:
  test-production:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm package manager
        run: npm install -g pnpm

      - name: Install project dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Run tests with ci settings
        run: pnpm run test:ci

  deploy-production:
    runs-on: ubuntu-latest
    needs: test-production

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm package manager
        run: npm install -g pnpm

      - name: Setup pnpm for generating global bin directory
        env:
          SHELL: /bin/bash
        run: |
          pnpm setup
          echo "PNPM_HOME=$HOME/.local/share/pnpm" >> $GITHUB_ENV
          echo "PATH=$HOME/.local/share/pnpm/bin:$PATH" >> $GITHUB_ENV

      - name: Install Vercel CLI
        run: pnpm install -g vercel

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build project artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy project artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

